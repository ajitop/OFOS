{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable, EventEmitter } from \"@angular/core\";\nimport { BehaviorSubject } from 'rxjs';\nlet CartService = class CartService {\n  constructor(toastr) {\n    this.toastr = toastr;\n    this.itemChanged = new EventEmitter();\n    this.cartItems = [];\n    this.cartCount = 0;\n    this.subject = new BehaviorSubject(null);\n    this.countSubject = new BehaviorSubject(0);\n  }\n\n  addSingle(item) {\n    if (!this.cartItems.some(value => value.name === item.name)) {\n      this.cartItems.push(item);\n      this.itemChanged.emit(item);\n      this.cartCount++;\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  addItem(item) {\n    if (!this.cartItems.some(value => value.menu_id === item.menu_id)) {\n      this.cartItems.push(item);\n      this.cartCount++;\n      this.countSubject.next(this.cartCount);\n      this.itemChanged.emit(this.cartItems);\n      this.toastr.success('Item Added In Cart !', 'Success', {\n        enableHtml: true,\n        closeButton: true,\n        timeOut: 10000\n      }); // this.toastr.success('Item Added In Cart !',  {enableHtml: true,\n      // closeButton: true,\n      // timeOut: 10000});\n\n      return this.subject.next(this.cartItems);\n    } else {\n      this.toastr.warning('Item Already In Cart !');\n    } // this.cartItems.push(item);\n\n  }\n\n  removeCartItem(index) {\n    this.cartItems.splice(index, 1);\n    this.cartCount--;\n    this.itemChanged.emit(this.cartItems);\n    this.toastr.success('Item Removed !');\n    return this.countSubject.next(this.cartCount);\n  }\n\n  getCartCount() {\n    return this.countSubject.next(this.cartCount);\n  }\n\n  afterLogin(item) {\n    this.itemChanged.emit(item);\n    return this.subject.next(item);\n  }\n\n};\nCartService = __decorate([Injectable({\n  providedIn: \"root\"\n})], CartService);\nexport { CartService };","map":null,"metadata":{},"sourceType":"module"}